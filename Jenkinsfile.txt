pipeline {
    agent any

    tools {
        maven "Maven-3.9.9"  // Match this with your Jenkins Maven tool name
    }

    environment {
        SONAR_HOST_URL = 'http://localhost:9000'
        SONARQUBE_TOKEN = credentials('d4770ed3-6b56-419f-8279-18c34eed06ce') // Jenkins credentials ID
        SONAR_PROJECT_KEY = 'PersonalFinanceTracker'
    }

    stages {
        stage('Setup') {
            steps {
                script {
                    bat 'if not exist test_logs mkdir test_logs'
                }
            }
        }

        stage('Checkout Code') {
            steps {
                checkout([$class: 'GitSCM',
                          userRemoteConfigs: [[
                            url: 'https://github.com/velvizhi1703/PersonalFinanceTracker.git',
                            credentialsId: 'github--ssh'
                          ]],
                          branches: [[name: 'main']]])
            }
        }

stage('Build') {
    steps {
        dir('C:/PersonalFinanceTracker') {
            bat 'mvn clean package -DskipTests'
        }
    }
}

        stage('Unit Tests') {
            steps {
                dir('C:/PersonalFinanceTracker') {
                    bat 'mvn test'
                }
            }
            post {
                always {
                    echo 'Unit tests completed'
                    junit 'personalfinancetracker/target/surefire-reports/*.xml'
                }
            }
        }

        stage('Integration Tests & Publish Coverage') {
            steps {
                dir('C:/PersonalFinanceTracker') {
                    bat 'mvn verify -Dsurefire.useFile=false -Dfailsafe.useFile=false'
                }
            }
            post {
                always {
                    echo 'Integration tests completed'
                    junit 'C:/PersonalFinanceTracker/target/failsafe-reports/*.xml'
                    recordCoverage(
                        tools: [[parser: 'JACOCO']],
                        id: 'jacoco',
                        name: 'JaCoCo Coverage',
                        sourceCodeRetention: 'EVERY_BUILD'
                    )
                }
            }
        }

		stage('SonarQube Analysis') {
		    steps {
		        withSonarQubeEnv('sonarqube') {
		            dir('C:/PersonalFinanceTracker') {
		                bat """
		                mvn sonar:sonar ^
		                  -Dsonar.projectKey=%SONAR_PROJECT_KEY% ^
		                  -Dsonar.coverage.jacoco.xmlReportPaths=target/jacoco-report-merged/jacoco.xml ^
		                  -Dsonar.java.binaries=target/classes
		                """
		            }
		        }
		    }
		    post {
		        always {
		            echo 'SonarQube analysis completed'
		        }
		    }
		}


        stage('Archive Artifacts') {
            steps {
                archiveArtifacts artifacts: 'C:/PersonalFinanceTracker/target/surefire-reports/*, C:/PersonalFinanceTracker/target/failsafe-reports/, C:/PersonalFinanceTracker/target/site/jacoco/, C:/PersonalFinanceTracker/target/.jar', fingerprint: true
                echo 'Artifacts archived successfully'
            }
        }
    }

    post {
        always {
            echo "Build completed with status: ${currentBuild.result}"
        }
    }
}